on:
  push:
    branches:
      - main
    paths:
      - "**.csv"
  workflow_dispatch:

jobs:
  create_raid_list_json:
    name: Create the raid list json
    runs-on: ubuntu-latest
    env:
      COMMITTER_NAME_TEXT: '{"false":"${{ github.actor }}", "true":"github-actions[bot]"}'
      COMMITTER_ID_TEXT: '{"false":"${{ github.actor_id }}", "true":"41898282"}'
      TEXT: '{"false":"[${{ github.event.pusher.name }}] Update raid_list.json", "true":"[${{ github.triggering_actor }}] Update raid_list.json"}'
    steps:
      - name: Checkout repository content
        uses: actions/checkout@v4 # Checkout the repository content to github runner.
        with:
          path: main
          token: ${{ secrets.MY_PAT }}
      - name: Setup Python version
        uses: actions/setup-python@v5
        with:
          python-version: 3.8 # Install the python version needed
      - name: Install Python dependencies
        run: python -m pip install --upgrade pip requests      
      - name: Run the Python script
        run: python main/.github/scripts/create_raid_list.py
      - name: Commit changes
        run: |
          cd ./main/
          git config user.name "${{ env.COMMITTER_NAME }}"
          git config user.email "${{ env.COMMITTER_ID }}+${{ env.COMMITTER_NAME }}@users.noreply.github.com"
          git remote set-url origin https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}
          git add ./"community-gathered data"/raid_list.json
          git commit --allow-empty -m "${{ env.COMMIT_MESSAGE }}"
          git push origin
        env:
          COMMITTER_NAME: ${{ fromJSON(env.COMMITTER_NAME_TEXT)[ github.ref_name == 'main' ] }}
          COMMITTER_ID: ${{ fromJSON(env.COMMITTER_ID_TEXT)[ github.ref_name == 'main' ] }}
          COMMIT_MESSAGE: ${{ fromJSON(env.TEXT)[ github.event.pusher.name == '' ] }}
          GITHUB_TOKEN: ${{ secrets.MY_PAT }}
